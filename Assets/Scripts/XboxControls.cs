//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/XboxControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @XboxControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @XboxControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""XboxControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""986212bf-0017-4bb1-8d2c-daa29bcfa218"",
            ""actions"": [
                {
                    ""name"": ""Uppercut"",
                    ""type"": ""Button"",
                    ""id"": ""09eb7b86-9ad2-4450-b404-521b1d2333ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BodyJab"",
                    ""type"": ""Button"",
                    ""id"": ""2390f455-524d-489c-a0b9-165c3388788f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightHook"",
                    ""type"": ""Button"",
                    ""id"": ""8dbb4cca-76d9-4581-a3da-3fc42be9ff84"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JabCross"",
                    ""type"": ""Button"",
                    ""id"": ""4ccf12c4-ca18-469f-bd59-eb02b6c56c1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Knee"",
                    ""type"": ""Button"",
                    ""id"": ""9b8ee9f5-4f9b-4770-94e5-d883a57699c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Headbutt"",
                    ""type"": ""Button"",
                    ""id"": ""272e9d4d-6cfa-47a7-b4f5-0d850728cc7a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CenterBlock"",
                    ""type"": ""Button"",
                    ""id"": ""54270042-a3d8-4a80-a4d7-bd5e80384410"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftBlock"",
                    ""type"": ""Button"",
                    ""id"": ""035622c2-096c-4461-affe-cf86cfefaffd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightBlock"",
                    ""type"": ""Button"",
                    ""id"": ""2645b71b-1910-41fe-9ea4-5f77c608c058"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""67499e21-67f6-42b1-9bf7-3e380354bdc1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""758590af-479d-4457-9e2e-a5b67c701f96"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Uppercut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcf96789-66fb-4da1-b22e-8871e49cf3f7"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BodyJab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79d5f291-7705-4d94-b893-53b1016f5bbe"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightHook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""87927b8c-42c6-4aae-8848-cd348f37cdd5"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""JabCross"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b28d9e7-5571-47e1-8a38-5bce9857e623"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Knee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d5eadd8-a924-4a7b-939c-74d4e8a60065"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Headbutt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9670596e-2564-460b-a8fe-f03d06ae554f"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CenterBlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2de2f0c9-f8a7-43f2-a41f-3cf0c655d544"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftBlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05a5770e-6d04-4c73-95cc-d70d9d267430"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightBlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad39d577-a7ca-4fb8-a6bc-d6c8ef4f1cbd"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Uppercut = m_Gameplay.FindAction("Uppercut", throwIfNotFound: true);
        m_Gameplay_BodyJab = m_Gameplay.FindAction("BodyJab", throwIfNotFound: true);
        m_Gameplay_RightHook = m_Gameplay.FindAction("RightHook", throwIfNotFound: true);
        m_Gameplay_JabCross = m_Gameplay.FindAction("JabCross", throwIfNotFound: true);
        m_Gameplay_Knee = m_Gameplay.FindAction("Knee", throwIfNotFound: true);
        m_Gameplay_Headbutt = m_Gameplay.FindAction("Headbutt", throwIfNotFound: true);
        m_Gameplay_CenterBlock = m_Gameplay.FindAction("CenterBlock", throwIfNotFound: true);
        m_Gameplay_LeftBlock = m_Gameplay.FindAction("LeftBlock", throwIfNotFound: true);
        m_Gameplay_RightBlock = m_Gameplay.FindAction("RightBlock", throwIfNotFound: true);
        m_Gameplay_Move = m_Gameplay.FindAction("Move", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Uppercut;
    private readonly InputAction m_Gameplay_BodyJab;
    private readonly InputAction m_Gameplay_RightHook;
    private readonly InputAction m_Gameplay_JabCross;
    private readonly InputAction m_Gameplay_Knee;
    private readonly InputAction m_Gameplay_Headbutt;
    private readonly InputAction m_Gameplay_CenterBlock;
    private readonly InputAction m_Gameplay_LeftBlock;
    private readonly InputAction m_Gameplay_RightBlock;
    private readonly InputAction m_Gameplay_Move;
    public struct GameplayActions
    {
        private @XboxControls m_Wrapper;
        public GameplayActions(@XboxControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Uppercut => m_Wrapper.m_Gameplay_Uppercut;
        public InputAction @BodyJab => m_Wrapper.m_Gameplay_BodyJab;
        public InputAction @RightHook => m_Wrapper.m_Gameplay_RightHook;
        public InputAction @JabCross => m_Wrapper.m_Gameplay_JabCross;
        public InputAction @Knee => m_Wrapper.m_Gameplay_Knee;
        public InputAction @Headbutt => m_Wrapper.m_Gameplay_Headbutt;
        public InputAction @CenterBlock => m_Wrapper.m_Gameplay_CenterBlock;
        public InputAction @LeftBlock => m_Wrapper.m_Gameplay_LeftBlock;
        public InputAction @RightBlock => m_Wrapper.m_Gameplay_RightBlock;
        public InputAction @Move => m_Wrapper.m_Gameplay_Move;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Uppercut.started += instance.OnUppercut;
            @Uppercut.performed += instance.OnUppercut;
            @Uppercut.canceled += instance.OnUppercut;
            @BodyJab.started += instance.OnBodyJab;
            @BodyJab.performed += instance.OnBodyJab;
            @BodyJab.canceled += instance.OnBodyJab;
            @RightHook.started += instance.OnRightHook;
            @RightHook.performed += instance.OnRightHook;
            @RightHook.canceled += instance.OnRightHook;
            @JabCross.started += instance.OnJabCross;
            @JabCross.performed += instance.OnJabCross;
            @JabCross.canceled += instance.OnJabCross;
            @Knee.started += instance.OnKnee;
            @Knee.performed += instance.OnKnee;
            @Knee.canceled += instance.OnKnee;
            @Headbutt.started += instance.OnHeadbutt;
            @Headbutt.performed += instance.OnHeadbutt;
            @Headbutt.canceled += instance.OnHeadbutt;
            @CenterBlock.started += instance.OnCenterBlock;
            @CenterBlock.performed += instance.OnCenterBlock;
            @CenterBlock.canceled += instance.OnCenterBlock;
            @LeftBlock.started += instance.OnLeftBlock;
            @LeftBlock.performed += instance.OnLeftBlock;
            @LeftBlock.canceled += instance.OnLeftBlock;
            @RightBlock.started += instance.OnRightBlock;
            @RightBlock.performed += instance.OnRightBlock;
            @RightBlock.canceled += instance.OnRightBlock;
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Uppercut.started -= instance.OnUppercut;
            @Uppercut.performed -= instance.OnUppercut;
            @Uppercut.canceled -= instance.OnUppercut;
            @BodyJab.started -= instance.OnBodyJab;
            @BodyJab.performed -= instance.OnBodyJab;
            @BodyJab.canceled -= instance.OnBodyJab;
            @RightHook.started -= instance.OnRightHook;
            @RightHook.performed -= instance.OnRightHook;
            @RightHook.canceled -= instance.OnRightHook;
            @JabCross.started -= instance.OnJabCross;
            @JabCross.performed -= instance.OnJabCross;
            @JabCross.canceled -= instance.OnJabCross;
            @Knee.started -= instance.OnKnee;
            @Knee.performed -= instance.OnKnee;
            @Knee.canceled -= instance.OnKnee;
            @Headbutt.started -= instance.OnHeadbutt;
            @Headbutt.performed -= instance.OnHeadbutt;
            @Headbutt.canceled -= instance.OnHeadbutt;
            @CenterBlock.started -= instance.OnCenterBlock;
            @CenterBlock.performed -= instance.OnCenterBlock;
            @CenterBlock.canceled -= instance.OnCenterBlock;
            @LeftBlock.started -= instance.OnLeftBlock;
            @LeftBlock.performed -= instance.OnLeftBlock;
            @LeftBlock.canceled -= instance.OnLeftBlock;
            @RightBlock.started -= instance.OnRightBlock;
            @RightBlock.performed -= instance.OnRightBlock;
            @RightBlock.canceled -= instance.OnRightBlock;
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnUppercut(InputAction.CallbackContext context);
        void OnBodyJab(InputAction.CallbackContext context);
        void OnRightHook(InputAction.CallbackContext context);
        void OnJabCross(InputAction.CallbackContext context);
        void OnKnee(InputAction.CallbackContext context);
        void OnHeadbutt(InputAction.CallbackContext context);
        void OnCenterBlock(InputAction.CallbackContext context);
        void OnLeftBlock(InputAction.CallbackContext context);
        void OnRightBlock(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
    }
}
